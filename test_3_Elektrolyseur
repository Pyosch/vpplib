import numpy as np
import matplotlib.pyplot as plt

# Physikalische Parameter des Elektrolyseurs
Faraday_Constant = 96485  # Faraday-Konstante [C/mol]
Gas_Constant = 8.314  # Gaskonstante [J/(mol K)]
Temperature = 298  # Temperatur [K]

# Elektrolysezellenparameter
Cell_Voltage = 1.48  # Zellspannung [V]
Max_Current_Density = 2.5  # Maximale Stromdichte [A/cm²]
Efficiency = 0.9  # Wirkungsgrad des Elektrolyseurs

# Modellierung der Wasserstoffproduktion über Zeit
time = np.linspace(0, 3600*24*365, 100)  # Zeitbereich von 0 bis 1 Jahr (in Sekunden)

def hydrogen_production_rate(time):
    current_density = Max_Current_Density * np.sin(time)  # Beispielstromdichte (sin-Funktion)
    return (current_density * Max_Current_Density) / (2 * Faraday_Constant * Efficiency)

hydrogen_production = hydrogen_production_rate(time)
volume_hydrogen = hydrogen_production * (Gas_Constant * Temperature) / 101325

# Berücksichtigung der Druck- und Temperaturkorrektur
pressure_correction_factor = 101325 / (Gas_Constant * Temperature)
volume_hydrogen_corrected = volume_hydrogen * pressure_correction_factor

# Berücksichtigung des Zellwirkungsgrads
cell_efficiency_correction = Efficiency / Cell_Voltage
energy_production_month = np.trapz(volume_hydrogen_corrected * cell_efficiency_correction, time) * 3600 * 24 * 30 / 1000000

# Monate für die x-Achse
months = np.arange(1, 13)

# Plotten des Graphen
plt.bar(months, energy_production_month * np.ones_like(months), align='center')
plt.xticks(months)
plt.xlabel('Monate')
plt.ylabel('Energiemenge [MWh]')
plt.title('Elektrolyseur - Energiemenge pro Monat')
plt.grid(True)
plt.show()

print("Energiemenge pro Jahr: ", energy_production_month * 12, " MWh")
